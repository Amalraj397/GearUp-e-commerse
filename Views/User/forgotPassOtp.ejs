<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Verify OTP</title>
  <style>
    :root {
      --primary-color: #ff6a00;
      --primary-hover: #e65c00;
      --background-color: #1a1a1a;
      --card-background: #262626;
      --text-color: #f5f5f5;
      --text-muted: #9ca3af;
      --error-color: #ef4444;
      --input-border: #4b5563;
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Inter', sans-serif;
      background-color: var(--background-color);
      color: var(--text-color);
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 20px;
    }

    .container {
      background-color: var(--card-background);
      border-radius: 12px;
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.4);
      width: 100%;
      max-width: 420px;
      padding: 2rem;
    }

    .header {
      text-align: center;
      margin-bottom: 2rem;
    }

    .header h1 {
      font-size: 2rem;
      font-weight: 700;
      margin-bottom: 0.5rem;
    }

    .header p {
      font-size: 0.9rem;
      color: var(--text-muted);
    }

    .otp-inputs {
      display: flex;
      justify-content: space-between;
      gap: 0.5rem;
      margin-bottom: 1.5rem;
    }

    .otp-input {
      width: 3rem;
      height: 3rem;
      text-align: center;
      font-size: 1.25rem;
      border: 2px solid var(--input-border);
      border-radius: 0.5rem;
      background-color: transparent;
      color: var(--text-color);
    }

    .otp-input:focus {
      outline: none;
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(255, 106, 0, 0.3);
    }

    .btn {
      background-color: var(--primary-color);
      color: white;
      border: none;
      padding: 0.75rem;
      border-radius: 0.5rem;
      font-size: 0.95rem;
      font-weight: 600;
      width: 100%;
      cursor: pointer;
      transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .btn:hover {
      background-color: var(--primary-hover);
      transform: translateY(-2px);
    }

    .resend-timer {
      text-align: center;
      margin-top: 1.25rem;
      font-size: 0.9rem;
      color: var(--text-muted);
    }

    .resend-link {
      color: var(--primary-color);
      text-decoration: underline;
      cursor: pointer;
      font-weight: 500;
      margin-left: 0.4rem;
    }

    .error-message {
      color: var(--error-color);
      font-size: 0.875rem;
      margin-top: 0.5rem;
      display: none;
      text-align: center;
    }

    @media (max-width: 480px) {
      .otp-input {
        width: 2.5rem;
        height: 2.5rem;
        font-size: 1rem;
      }

      .container {
        padding: 1.5rem;
      }
    }
  </style>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body onload="init()">
  <div class="container">
    <div class="header">
      <h1>Verify OTP</h1>
      <p>Enter the code sent to your email</p>
    </div>
    <form id="otpForm">
      <div class="otp-inputs">
        <input type="text" class="otp-input" maxlength="1" required>
        <input type="text" class="otp-input" maxlength="1" required>
        <input type="text" class="otp-input" maxlength="1" required>
        <input type="text" class="otp-input" maxlength="1" required>
        <input type="text" class="otp-input" maxlength="1" required>
        <input type="text" class="otp-input" maxlength="1" required>
      </div>
      <button type="submit" class="btn">Verify</button>
    </form>
    <div id="message" class="error-message">Invalid OTP. Try again.</div>
    <div class="resend-timer">
      Didn't receive the code? <span id="timerDisplay">60</span>s
      <a href="#" class="resend-link" id="resendLink" onclick="resetTimer()" style="display: none;">Resend</a>
    </div>
  </div>

  <script>
    let timer;
    const otpInputs = document.querySelectorAll('.otp-input');
    const timerDisplay = document.getElementById('timerDisplay');
    const resendLink = document.getElementById('resendLink');
    const messageBox = document.getElementById('message');
    const email = sessionStorage.getItem('resetEmail');

    function init() {
      if (localStorage.getItem('resetStep') === 'newPassword') {
        window.location.href = '/beats/user/forgotPassword/newPassword';
      }
      attachInputListeners();
      startTimer();
    }

    function attachInputListeners() {
      otpInputs.forEach((input, index) => {
        input.addEventListener('input', (e) => {
          e.target.value = e.target.value.replace(/[^0-9]/g, '');
          if (e.target.value && index < otpInputs.length - 1) {
            otpInputs[index + 1].focus();
          }
        });

        input.addEventListener('keydown', (e) => {
          if (e.key === 'Backspace' && !e.target.value && index > 0) {
            otpInputs[index - 1].focus();
          }
        });
      });
    }

    function startTimer() {
      let remainingTime = parseInt(localStorage.getItem('remainingTime')) || 60;
      resendLink.style.display = 'none';
      updateTimerDisplay(remainingTime);

      timer = setInterval(() => {
        remainingTime--;
        updateTimerDisplay(remainingTime);   
        localStorage.setItem('remainingTime', remainingTime);   

        if (remainingTime <= 0) {   
          clearInterval(timer);   
          resendLink.style.display = 'inline';   
          localStorage.removeItem('remainingTime');   
        }   
      }, 1000);   
    }   

    function updateTimerDisplay(time) {   
      timerDisplay.textContent = time;   
    }   

    function resetTimer() {   
      clearInterval(timer);   
      messageBox.style.display = 'none';   
      localStorage.removeItem('remainingTime');   
      resendLink.style.display = 'none';   
      startTimer();

      $.ajax({
        url: '/beats/user/forgotPassword/resendOtp',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ email }),
        success: function(response) {
          alert(response.message);
        },
        error: function(xhr) {
          alert(xhr.responseJSON.message || 'An error occurred..!');
        }
      });
    }

    $('#otpForm').on('submit', function(event) {
      event.preventDefault();
      const otp = Array.from(otpInputs).map(input => input.value).join('');
      $.ajax({
        url: '/beats/user/forgotPassword/otpVerify',
        type: 'POST',
        contentType: 'application/json',
        data: JSON.stringify({ otp }),
        success: function(response) {
          localStorage.removeItem('remainingTime');
          messageBox.textContent = response.message;
          messageBox.style.color = 'green';
          messageBox.style.display = 'block';

          if (response.redirectUrl) {
            localStorage.setItem('resetStep', 'otp');
            window.location.href = response.redirectUrl;
          }
        },
        error: function(xhr) {
          let errorMessage = xhr.responseJSON?.message || 'Invalid OTP!';
          messageBox.textContent = errorMessage;
          messageBox.style.color = 'red';
          messageBox.style.display = 'block';
        }
      });
    });
  </script>
</body>
</html>
