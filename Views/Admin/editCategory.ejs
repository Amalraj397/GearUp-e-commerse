<%-include("../../Views/Partials/Admin/header")%>

<style>
  .add-category-container {
    padding: 20px;
    color: #ffffff;
    background-color: #1a202c;
  }

  .page-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
  }

  .page-title {
    font-size: 24px;
    margin: 0;
  }

  .back-button {
    display: flex;
    align-items: center;
    background-color: #4a5568;
    color: #ffffff;
    border: none;
    padding: 8px 16px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
  }

  .back-button .material-icons {
    margin-right: 8px;
  }

  .form-container {
    background-color: #2d3748;
    padding: 20px;
    border-radius: 8px;
  }

  .form-container h2 {
    margin-top: 0;
    margin-bottom: 20px;
  }

  .edit-category-form {
    display: flex;
    flex-direction: column;
  }

  .form-group {
    margin-bottom: 20px;
  }

  .form-group label {
    display: block;
    margin-bottom: 5px;
  }

  .form-group input,
  .form-group textarea {
    width: 100%;
    padding: 10px;
    background-color: #1a202c;
    border: 1px solid #4a5568;
    border-radius: 4px;
    color: #ffffff;
  }

  .form-group textarea {
    height: 100px;
    resize: vertical;
  }

  .submit-button {
    background-color: #000000;
    color: #ffffff;
    border: none;
    padding: 10px 20px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 16px;
    align-self: flex-start;
  }

  .submit-button:hover {
    background-color: #0343b1;
  }
</style>
<link
  href="https://fonts.googleapis.com/icon?family=Material+Icons"
  rel="stylesheet"
/>

<div class="add-category-container">
  <div class="page-header">
    <h1 class="page-title">EDIT CATEGORIES</h1>
    <button class="back-button" onclick="window.history.back();">
      <span class="material-icons">arrow_back</span>
    </button>
  </div>

  <div class="form-container">
    <!-- <h2>Add Category</h2> -->
    <form id="edit-category" class="edit-category-form">
      <div class="form-group">
        <!-- <input type="hidden" id="category-id" name="id" value="<%= category._id %>" /> -->
        <label for="category-name">Category Name:</label>
        <input
          type="text"
          id="category-name"
          name="name"
          value="<%= category.name %>"
          placeholder="Enter category name"
        />
      </div>
      <div class="form-group">
        <label for="category-description">Description:</label>
        <textarea
          id="category-description"
          name="description"
          placeholder="Enter category description"
        >
<%= category.description %></textarea
        >
      </div>
      <button type="submit" class="submit-button">Update & Save</button>
    </form>
    <div id="errorMessages" style="color: red"></div>
    <!--error message container-->
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const backBtn = document.getElementById("backButton");
    if (backBtn) {
      backBtn.addEventListener("click", function () {
        window.location.href = "/admin/addCategory";
      });
    }

    const form = document.getElementById("edit-category");
    if (form) {
      form.addEventListener("submit", function (e) {
        e.preventDefault();

        const categoryName = document.getElementById("category-name").value;
        const categoryDescription = document.getElementById(
          "category-description"
        ).value;
        const errorMessage = [];

        const nameRegex = /^[A-Z][a-zA-Z+\-\s]*$/;
        if (
          !categoryName ||
          !nameRegex.test(categoryName) ||
          categoryName.length < 5
        ) {
          errorMessage.push(
            "The category name must start with a capital letter and be at least 5 characters long."
          );
        }

        if (!categoryDescription || categoryDescription.trim().length < 5) {
          errorMessage.push(
            "The description must be at least 5 characters long and cannot start with a space."
          );
        }

        const errorMessageContainer = document.getElementById("errorMessages");
        errorMessageContainer.innerText = "";
        if (errorMessage.length > 0) {
          errorMessage.forEach((msg) => {
            const p = document.createElement("p");
            p.textContent = msg;
            errorMessageContainer.appendChild(p);
          });
          return;
        }
        Swal.fire({
          title: "Are you sure",
          text: "You want to make changes..!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonText: "Yes, Update..!",
        }).then((result) => {
          if (result.isConfirmed) {
            fetch(`/admin/editCategory/${'<%= category._id %>'}`, {
              method: "PATCH",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                id: '<%= category._id %>',
                name: categoryName.trim(),
                description: categoryDescription.trim(),
              }),
            })
              .then(async (response) => {
                const data = await response.json().catch(() => ({}));
                if (!response.ok)
                  throw new Error(data.message || "Request failed");
                Swal.fire({
                  title: data.message || "Success!",
                  icon: "success",
                }).then(() => {
                  location.reload();
                });
              })
              .catch((err) => {
                Swal.fire({
                  title: "Error!",
                  text:
                    err.message || "Something went wrong. Please try again.",
                  icon: "error",
                });
              });
          }
        });
        // .fetch("/admin/editCategory", {
        //   method: "POST",
        //   headers: {
        //     "Content-Type": "application/json",
        //   },
        //   body: JSON.stringify({
        //     name: categoryName.trim(),
        //     description: categoryDescription.trim(),
        //   }),
        // })
        // .then(async (response) => {
        //   const data = await response.json().catch(() => ({}));
        //   if (!response.ok) throw new Error(data.message || "Request failed");
        //   Swal.fire({
        //     title: data.message || "Success!",
        //     icon: "success",
        //   }).then(() => {
        //     location.reload();
        //   });
        // })
        // .catch((err) => {
        //   Swal.fire({
        //     title: "Error!",
        //     text: err.message || "Something went wrong. Please try again.",
        //     icon: "error",
        //   });
        // });
      });
    }
  });
</script>

<%-include("../../Views/Partials/Admin/footer")%>
