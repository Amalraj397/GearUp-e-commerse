<!--------product Add------>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">
    <style>
        /* Products Page Specific Styles */
.products-container,
.add-product-container {
    padding: 20px;
    overflow-y: auto;
    flex: 1;
}

.products-header,
.add-product-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    flex-wrap: wrap;
    gap: 15px;
}

.products-actions,
.add-product-actions {
    display: flex;
    align-items: center;
    gap: 15px;
}

.search-box {
    display: flex;
    align-items: center;
    background-color: var(--card-bg);
    border-radius: 5px;
    padding: 5px 10px;
    width: 300px;
}

.search-box input {
    background: none;
    border: none;
    color: var(--text-color);
    padding: 8px;
    width: 100%;
    outline: none;
}

.add-product-btn {
    background-color: var(--primary-color);
    color: white;
    border: none;
    padding: 10px 15px;
    border-radius: 5px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 8px;
    text-decoration: none;
    transition: background-color 0.3s;
}

.add-product-btn:hover {
    background-color: var(--primary-dark);
}

/* Products Table */
.products-table-container {
    background-color: var(--card-bg);
    border-radius: 10px;
    overflow-x: auto;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin-bottom: 20px;
}

.products-table {
    width: 100%;
    border-collapse: collapse;
    min-width: 1200px;
}

.products-table th,
.products-table td {
    padding: 15px;
    text-align: left;
    border-bottom: 1px solid var(--border-color);
}

.products-table th {
    background-color: rgba(255, 140, 0, 0.1);
    color: var(--primary-color);
    font-weight: 600;
    position: sticky;
    top: 0;
    z-index: 10;
}

.products-table tbody tr:hover {
    background-color: rgba(255, 140, 0, 0.05);
}

.products-table tbody tr:last-child td {
    border-bottom: none;
}

.product-image {
    width: 50px;
    height: 50px;
    border-radius: 5px;
    object-fit: cover;
}

.product-status {
    display: inline-block;
    padding: 5px 10px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 600;
}

.status-active {
    background-color: rgba(72, 187, 120, 0.2);
    color: var(--success-color);
}

.status-inactive {
    background-color: rgba(245, 101, 101, 0.2);
    color: var(--danger-color);
}

.status-draft {
    background-color: rgba(237, 137, 54, 0.2);
    color: var(--warning-color);
}

.product-actions {
    display: flex;
    gap: 8px;
}

.edit-btn,
.block-btn,
.unblock-btn {
    padding: 6px 10px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 5px;
    transition: all 0.3s ease;
}

.edit-btn {
    background-color: rgba(66, 153, 225, 0.2);
    color: var(--info-color);
}

.edit-btn:hover {
    background-color: var(--info-color);
    color: white;
}

.block-btn {
    background-color: rgba(245, 101, 101, 0.2);
    color: var(--danger-color);
}

.block-btn:hover {
    background-color: var(--danger-color);
    color: white;
}

.unblock-btn {
    background-color: rgba(72, 187, 120, 0.2);
    color: var(--success-color);
}

.unblock-btn:hover {
    background-color: var(--success-color);
    color: white;
}

/* Pagination */
.pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 20px;
    gap: 10px;
}

.pagination-btn {
    background-color: var(--card-bg);
    border: 1px solid var(--border-color);
    color: var(--text-color);
    padding: 8px 15px;
    border-radius: 5px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 5px;
    transition: all 0.3s ease;
}

.pagination-btn:hover:not(:disabled) {
    background-color: var(--primary-color);
    color: white;
}

.pagination-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.page-numbers {
    display: flex;
    gap: 5px;
}

.page-number {
    width: 35px;
    height: 35px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--card-bg);
    border: 1px solid var(--border-color);
    color: var(--text-color);
    border-radius: 5px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.page-number:hover {
    background-color: rgba(255, 140, 0, 0.1);
    color: var(--primary-color);
}

.page-number.active {
    background-color: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
}

/* Add Product Form Styles */
.add-product-form {
    margin-top: 20px;
}

.form-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
}

.form-card {
    background-color: var(--card-bg);
    border-radius: 10px;
    padding: 20px;
    margin-bottom: 20px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.form-card h3 {
    margin-bottom: 15px;
    font-size: 18px;
    color: var(--primary-color);
    border-bottom: 1px solid var(--border-color);
    padding-bottom: 10px;
}

.form-group {
    margin-bottom: 15px;
}

.form-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 15px;
}

.form-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
}

.form-group input[type="text"],
.form-group input[type="number"],
.form-group select,
.form-group textarea {
    width: 100%;
    padding: 10px;
    border: 1px solid var(--border-color);
    border-radius: 5px;
    background-color: var(--darker-bg);
    color: var(--text-color);
    font-size: 14px;
}

.form-group input[type="text"]:focus,
.form-group input[type="number"]:focus,
.form-group select:focus,
.form-group textarea:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(255, 140, 0, 0.2);
}

.form-help-text {
    font-size: 12px;
    color: var(--text-muted);
    margin-bottom: 15px;
}

/* Image Upload Styles */
.image-upload-container {
    margin-top: 15px;
}

.image-upload-area {
    border: 2px dashed var(--border-color);
    border-radius: 10px;
    padding: 30px;
    text-align: center;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    margin-bottom: 15px;
}

.image-upload-area:hover {
    border-color: var(--primary-color);
    background-color: rgba(255, 140, 0, 0.05);
}

.image-upload-placeholder {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
}

.image-upload-placeholder i {
    font-size: 40px;
    color: var(--primary-color);
}

.image-upload-placeholder p {
    font-size: 16px;
    font-weight: 500;
}

.image-upload-placeholder span {
    font-size: 12px;
    color: var(--text-muted);
}

.image-upload-item {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;
}

.image-preview-item {
  width: 100px;
  height: 100px;
  object-fit: cover;
  border-radius: 2px;
  border: 1px solid #ccc;
}
.image-preview {
    display: grid;
    position: relative;
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
    gap: 5px;
    margin-top: 15px;
    border-radius: 3px;
    overflow: hidden;
    width: 100%;
}
.image-preview-item-wrapper{
    position:relative;
    width:100px;
    height:100px
}
.image-preview-item-wrapper:hover .remove-image{
    opacity:1
}

.image-preview img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.remove-image {
    position: absolute;
    top: 5px;
    right: 5px;
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    border: none;
    border-radius: 50%;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    opacity: 0;
    transition: opacity 0.3s ease;
} 

.image-preview:hover .remove-image {
    opacity: 1;
}

/* ----------------image upload styles ends----------------- */
/* Price Input Styles */
.price-input {
    position: relative;
}

.currency-symbol {
    position: absolute;
    left: 10px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-muted);
}

.price-input input {
    padding-left: 25px !important;
}

/* Toggle Switch */
.toggle-switch {
    display: inline-block;
    position: relative;
}

.toggle-input {
    display: none;
}

.toggle-label {
    display: block;
    width: 48px;
    height: 24px;
    border-radius: 12px;
    background-color: var(--border-color);
    cursor: pointer;
    position: relative;
    transition: background-color 0.3s ease;
}

.toggle-label::after {
    content: '';
    position: absolute;
    top: 2px;
    left: 2px;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: white;
    transition: transform 0.3s ease;
}

.toggle-input:checked + .toggle-label {
    background-color: var(--primary-color);
}

.toggle-input:checked + .toggle-label::after {
    transform: translateX(24px);
}

/* Checkbox Styles */
.checkbox-group {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 10px;
}

.checkbox-item {
    display: flex;
    align-items: center;
    gap: 8px;
}

.checkbox-item input[type="checkbox"] {
    width: 16px;
    height: 16px;
    accent-color: var(--primary-color);
}

/* Form Actions */
.form-actions {
    display: flex;
    justify-content: flex-end;
    gap: 15px;
    margin-top: 20px;
}

.cancel-btn,
.save-product-btn,
.publish-btn,
.submit-btn {
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 8px;
    transition: all 0.3s ease;
}

.cancel-btn {
    background-color: transparent;
    border: 1px solid var(--border-color);
    color: var(--text-color);
}

.cancel-btn:hover {
    background-color: var(--border-color);
}

.save-product-btn {
    background-color: transparent;
    border: 1px solid var(--primary-color);
    color: var(--primary-color);
}

.save-product-btn:hover {
    background-color: rgba(255, 140, 0, 0.1);
}

.publish-btn,
.submit-btn {
    background-color: var(--primary-color);
    color: white;
}

.publish-btn:hover,
.submit-btn:hover {
    background-color: var(--primary-dark);
}

.error-message {
    color: #a61518;
    font-size: 1.0rem;
    margin-top: 4px;
    display: block;
    min-height: 20px;
}
/* -----------cropper modal--------- */
#cropperModal {
    position: fixed; top: 0; left: 0; right: 0; bottom: 0;
    background: rgba(0,0,0,0.7);
    display: flex; align-items: center; justify-content: center;
    z-index: 9999;
}
.modal-content {
    background: #fff;
    padding: 20px;
    border-radius: 10px;
    text-align: center;
}

.crop-btn, .cancel-btn {
    padding: 8px 18px;
    border: none;
    font-weight: 700;
    border-radius: 6px;
    font-size: 16px;
    cursor: pointer;
    margin: 0 8px;
    transition: background-color 0.3s ease;
}

/* Crop Button - Green */
.crop-btn {
    background-color: #208537;
    color: rgb(248, 244, 244);
}
.crop-btn:hover {
    background-color: #00ff37;
     color: rgb(31, 30, 30);
}

/* Cancel Button - Red */
.cancel-btn {
    background-color: #850a16;
    color: white;
    /* margin-left: 94%; */
}
.cancel-btn:hover {
    background-color: #f1021a;
}
/* -----------cropper modal end---------- */

@media (max-width: 768px) {
    .gender-frame-group {
        flex-direction: column;
        gap: 15px;
    }
}

/* Responsive Styles */
@media (max-width: 1024px) {
    .form-grid {
        grid-template-columns: 1fr;
    }
    
    .products-actions {
        flex-direction: column;
        align-items: flex-start;
    }
    
    .search-box {
        width: 100%;
    }
    
    .add-product-btn {
        width: 100%;
        justify-content: center;
    }
}

@media (max-width: 768px) {
    .form-row {
        grid-template-columns: 1fr;
    }
    
    .add-product-header {
        flex-direction: column;
        align-items: flex-start;
    }
    
    .add-product-actions {
        width: 100%;
        justify-content: space-between;
    }
}
    </style>
            <%-include("../../Views/Partials/Admin/header")%>
            <!-- Add Product Content -->
            <div class="add-product-container">
                <div class="add-product-header">
                    <h1>Add New Product</h1>
                    <div class="add-product-actions">
                        <button id="viewProductsBtn" class="save-product-btn" onclick="window.location.href='/admin/productList'">View products.</button>
                    </div>  
                </div>
                <form id="addProduct-form" class="add-product-form">
                    <div class="form-grid">
                        <div class="form-column">
                            <!-- Basic Information -->
                            <div class="form-card">
                                <h3>Basic Information</h3>
                                <div class="form-group">
                                    <label for="product-name">Product Name*</label>
                                    <input type="text" id="product-name" name="productName">
                                    <span  class="error-message"></span>
                                </div>
                                <div class="form-row">
                                    <div class="form-group">
                                        <label for="brand">Brand*</label>
                                        <select id="brand" name="brand">
                                            <option value="" disabled selected>-select-</option>
                                            <%for(let i=0; i<brand.length; i++) {%>
                                            <option value="<%= brand[i].brandName%>">
                                                <%=brand[i].brandName%>
                                            </option>
                                            <% } %>
                                        </select>
                                        <span class="error-message"></span>
                                    </div>
                                    <div class="form-group">
                                        <label for="category">Category*</label>
                                        <select id="category" name="category">
                                            <option value="" disabled selected>-select-</option>
                                            <%for(let i=0; i<category.length; i++) {%>
                                            <option value="<%=category[i].name%>">
                                                <%=category[i].name%>
                                            </option>
                                            <% } %>
                                        </select>
                                        <span class="error-message"></span>
                                    </div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="description">Description*</label>
                                    <textarea id="description" name="description" rows="5"></textarea>
                                    <span class="error-message"></span>
                                </div>
                            </div>
                            
                            <!-- Variants and Attributes -->
                            <div class="form-card">
                                <h3>Attributes:</h3>
                                <div class="form-row">
                                    <div class="form-group">
                                        <label for="scale">Scale:</label>
                                        <select id="scale" name="scale" >
                                            <option value="" disabled selected>-select-</option>
                                            <option id="1:64" value="1:64"> 1:64 </option>
                                            <option id="1:43" value="1:43"> 1:43 </option>
                                            <option id="1:32" value="1:32"> 1:32 </option>
                                            <option id="1:24" value="1:24"> 1:24 </option>
                                            <option id="1:18" value="1:18"> 1:18 </option>
                                        </select>
                                        <span class="error-message"></span>
                                    </div>
                                    <div class="form-group">
                                        <label for="color">Edition:</label>
                                        <select id="edition" name="edition">
                                            <option value="" disabled selected>-select-</option>
                                            <option  id="fast and Furious" value="Fast & Furious">Fast & Furious</option>
                                            <option  id="gran turismo" value="Gran Turismo">Gran Turismo</option>
                                            <option  id="batman" value="Batman">Batman</option>
                                            <option  id="racing" value="racing">Racing sports</option>
                                            <option  id="Official" value="Official">Official</option>
                                            <option  id="forza motorsports" value="Forza Motorsports">Forza Motorsports</option>
                                            <option  id="collective" value="collective">Collective</option>
                                        </select>
                                        <span class="error-message"></span>
                                    </div>
                                </div>
                                
                                <div class="form-group">
                                    <label for="stock">Stock Quantity*</label>
                                    <input type="number" id="product-stock" name="stock" min="0">
                                    <span  class="error-message"></span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="form-column">
                            <!-- Pricing Information -->
                            <div class="form-card">
                                <h3>Pricing & offer Info</h3>
                                <div class="form-group">
                                        <label for="product-price">Product Price*</label>
                                        <input type="number" id="product-price" name="price" min="0">
                                        <span class="error-message"></span>
                                </div> 
                                <div class="form-group">
                                    <label for="product-offer">Product Offer (%)</label>
                                    <input type="number" id="product-offer" name="offer" min="0" max="100" placeholder="e.g : 10">
                                    <span class="error-message"></span>
                                </div>
                            </div> 
                            
                            <!-- Product Status -->
                            <div class="form-card">
                                <h3>Product Status</h3>
                                <div class="form-group">
                                    <label for="status">Status</label>
                                    <select id="status" name="status">
                                        <option value="In-stock">In Stock</option>
                                        <option value="Out-of-stock">Out of Stock</option>
                                        <option value="Discontinued">Discontinued</option>
                                    </select>
                                    <span class="error-message"></span>
                                </div>
 
                                <div class="form-card">
                                  <h3>Product Images</h3>
                                    <p class="form-help-text">Upload multiple images for your product. First image will be used as the featured image.</p>
                                     <div class="image-upload-container">
                                      <div class="image-upload-area" id="image-upload-area">
                                          <div class="image-upload-placeholder">
                                              <i class="fas fa-cloud-upload-alt"></i>
                                              <p>Drag & drop images here or click to browse</p>
                                              <span>Supports: JPG, PNG, GIF (Max 10 MB each)</span>
                                          </div>
                                          <input type="file" id="product-images" name="productImages" multiple accept="image/*" class="image-upload-input">
                                          <div class="image-preview" id="image-preview"></div>
                                        </div>
                                         <span id="error-message" class="error-message"></span>
                                    </div>  
                                </div>
                            </div> 
                        </div>
                    </div>

                    <div class="form-actions">
                        <button type="button" class="cancel-btn"  id="cancelBtn" onclick="window.location.href='/admin/addProduct'">
                            <i class="fas fa-times"></i> Cancel
                          </button>
                        <button type="submit" class="submit-btn">
                            <i class="fas fa-check"></i> Save Product
                        </button>
                    </div>
                </form>
                <!-----------------cropper modal----------------->
                <div id="cropperModal" class="modal" style="display:none;">
                  <div class="modal-content" style="margin-top: 20%;">
                    <img id="cropperImage" style="max-width: 100%; max-height: 400px;">
                    <div style="margin-top: 10px;">
                        <button type="button" id="cropImageBtn" class="crop-btn">Crop</button>
                        <button type="button" id="cancelCropBtn" class="cancel-btn" style="margin-left: 94%">Cancel</button>
                    </div>
                  </div> 
                </div>
                <!---------------cropper modal end------------>
            </div>
        </main>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>

<!--------------------------------------=======SCRIPT=======----------------------------------------->
<script>
  const productForm = document.getElementById('addProduct-form');
  const imagePreviewContainer = document.getElementById('image-preview');
  const imageUploadArea = document.getElementById('image-upload-area');
  const placeHolder = document.querySelector('.image-upload-placeholder');
  const imageInput = document.getElementById('product-images');
  let selectedFiles = [];

  
  // ================IMAGE EVENTS SETUP================

  ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
    imageUploadArea.addEventListener(eventName, e => {
      e.preventDefault();
      e.stopPropagation();
    }, false);
  });

  ['dragenter', 'dragover'].forEach(eventName => {
    imageUploadArea.addEventListener(eventName, () => {
      imageUploadArea.classList.add('highlight');
    }, false);
  });

  ['dragleave', 'drop'].forEach(eventName => {
    imageUploadArea.addEventListener(eventName, () => {
      imageUploadArea.classList.remove('highlight');
    }, false);
  });

    imageUploadArea.addEventListener('drop', e => {
      const file = e.dataTransfer.files[0];  
      if (!file) return;
      openCropper(file); 
    });

    imageInput.addEventListener('change', e => {
      const file = e.target.files[0]; 
      if (!file) return;
      openCropper(file);  
      placeHolder.style.display = 'none';
    });

  function addFiles(files) {
    for (const file of files) {
      if (!file.type.match('image/(jpeg|png|gif|jpg|jfif)')) {
        Swal.fire({ icon: 'error', title: 'Invalid File Type', text: 'Only JPG, PNG, GIF, or JFIF formats allowed.' });
        continue;
      }

      if (file.size > 10 * 1024 * 1024) {
        Swal.fire({ icon: 'error', title: 'File Too Large', text: 'Each file must be under 10 MB.' });
        continue;
      }

      if (selectedFiles.length >= 8) {
        Swal.fire({ icon: 'warning', title: 'Maximum Limit Reached', text: 'You can upload up to 8 images only.' });
        break;
      }

      selectedFiles.push(file);
      previewImage(file);
    }

    const imageError = document.getElementById('error-message');
    if (selectedFiles.length < 3) {
      imageError.textContent = 'Please upload at least three images.';
    } else {
      imageError.textContent = '';
    }
  }

// -----------------------image_cropper---------------------

function openCropper(file) {
  const cropperModal = document.getElementById('cropperModal');
  const cropperImage = document.getElementById('cropperImage');

  const reader = new FileReader();
  reader.onload = () => {
    cropperImage.src = reader.result;
    cropperModal.style.display = 'block';

    if (window.cropperInstance) {
      window.cropperInstance.destroy();
    }
    window.cropperInstance = new Cropper(cropperImage, {
      aspectRatio: 1,
      viewMode: 1,
      autoCropArea: 1,
    });
  };
  reader.readAsDataURL(file);

  // Attach the crop button event dynamically
  const cropBtn = document.getElementById('cropImageBtn');
  const cancelBtn = document.getElementById('cancelCropBtn');

  cropBtn.onclick = function () {
    const cropper = window.cropperInstance;
    if (!cropper) return;

    const canvas = cropper.getCroppedCanvas({ width: 800, height: 800 });

    canvas.toBlob(blob => {
      const croppedFile = new File([blob], file.name, { type: 'image/jpeg' });
      handleCroppedImage(croppedFile);
      cropper.destroy();
      window.cropperInstance = null;
      cropperModal.style.display = 'none';
    }, 'image/jpeg');
  };

  cancelBtn.onclick = function () {
    if (window.cropperInstance) window.cropperInstance.destroy();
    window.cropperInstance = null;
    cropperModal.style.display = 'none';
  };
}
  
// --------------------image_cropper ENDS----------------------

 window.previewImage =  function (file) {
    const reader = new FileReader();
    reader.onload = e => {
      const previewDiv = document.createElement('div');
      previewDiv.className = 'image-preview-item-wrapper';

      const img = document.createElement('img');
      img.className = 'image-preview-item';
      img.src = e.target.result;
      img.alt = file.name;

      const removeBtn = document.createElement('button');
      removeBtn.className = 'remove-image';
      removeBtn.innerHTML = '<i class="fas fa-times"></i>';
      removeBtn.addEventListener('click', () => {
        imagePreviewContainer.removeChild(previewDiv);
        selectedFiles = selectedFiles.filter(f => f.name !== file.name);

        if (selectedFiles.length < 3) {
          document.getElementById('error-message').textContent = 'Please upload at least three images.';
        } else {
          document.getElementById('error-message').textContent = '';
        }

        if (selectedFiles.length === 0) {
          placeHolder.style.display = 'flex';
        }
      });

      previewDiv.appendChild(img);
      previewDiv.appendChild(removeBtn);
      imagePreviewContainer.appendChild(previewDiv);
    };
    reader.readAsDataURL(file);
  }

   window.handleCroppedImage = function(file) {
    // Your existing preview function, example:
        previewImage(file); 

        selectedFiles.push(file);

    if (selectedFiles.length >= 3) {
        document.getElementById('error-message').textContent = '';
    }
};
  // ========== FORM SUBMISSION AND VALIDATION ==========

    // Listening for form submission
    productForm.addEventListener('submit', function (e) {
          e.preventDefault(); // Prevent default form submission for custom validation
    
        // Clear the previous error messages
        const errorMessages = document.querySelectorAll('.error-message');
        errorMessages.forEach(msg => msg.textContent = '');
    
        let isValid = true;
    
        // Validate Product Name
        const productName = document.getElementById('product-name');
            if (!productName.value.trim()) {
        productName.nextElementSibling.textContent = 'Product Name is required';
                isValid = false;
            }
    
        // Validate Brand 
        const brand = document.getElementById('brand');
            if (!brand.value) {
        brand.nextElementSibling.textContent = 'Please select a brand';
                isValid = false;
            }
    
        // Validate Category 
        const category = document.getElementById('category');
            if (!category.value) {
        category.nextElementSibling.textContent = 'Please select a category';
                isValid = false;
            }
    
        // Validate Description 
        const description = document.getElementById('description');
            if (!description.value.trim()) {
        description.nextElementSibling.textContent = 'Description is required';
                isValid = false;
            }
    
        // Validate Stock
        const stock = document.getElementById('product-stock');
            if (stock.value === '' || isNaN(stock.value) || Number(stock.value) < 0) {
        stock.nextElementSibling.textContent = 'Please enter a valid stock quantity (0 or more).';
                isValid = false;
            }
    
        // Validate Price
        const price = document.getElementById('product-price');
            if (price.value === '' || isNaN(price.value) || Number(price.value) < 0) {
        price.nextElementSibling.textContent = 'Please enter a valid price (0 or more).';
                isValid = false;
            }
    
        // Validate Offer
        const offer = document.getElementById('product-offer');
            if (offer.value === '' || isNaN(offer.value) || Number(offer.value) < 0) {
        offer.nextElementSibling.textContent = 'Offer must be between 0 and 100';
                isValid = false;
            }
    
        // Validate Image Uploads
        const Image = document.getElementById('error-message');
            if (selectedFiles.length < 3) {
        Image.textContent = 'Please upload at least three images.';
                isValid = false;
            }
    
        // If any validation failed, stop form submission
            if (!isValid) return;
    
      // Show success message using SweetAlert if all validations pass
    
        Swal.fire({
          icon: 'success',
          title: 'Validation Passed',
          text: 'All fields are valid. Submitting the form...',
          showConfirmButton: false,
          timer: 1000
        }).then(() => {
    
        const formData = new FormData();  
    
          //manually appending all data to avoid image duplication 
      formData.append('productName', document.getElementById('product-name').value);
      formData.append('brand', document.getElementById('brand').value);
      formData.append('category', document.getElementById('category').value);
      formData.append('description', document.getElementById('description').value);
      formData.append('scale', document.getElementById('scale').value);
      formData.append('edition', document.getElementById('edition').value);
      formData.append('stock', document.getElementById('product-stock').value);
      formData.append('price', document.getElementById('product-price').value);
      formData.append('offer', document.getElementById('product-offer').value);
      formData.append('status', document.getElementById('status').value);
    
    
      // Append each image file (already selected & stored in selectedFiles)
        selectedFiles.forEach(file => {
            formData.append('productImages', file); // 'images' matches the Multer field name
      });
    
      fetch("/admin/addProduct", {
        method: 'POST',
        body: formData
      })
        .then(response => response.json())
        .then(data => {
            Swal.fire({
              icon: 'success',
              title: 'Product Added!',
              text: 'Your product was successfully uploaded.',
              confirmButtonText: 'OK'
            }).then(() => {
              productForm.reset();            // Clearing  the form
              document.getElementById('image-preview').innerHTML = ''; // Clearing  image preview
              selectedFiles = [];             // Reset selected files array
            });
        })
        .catch(err => {
          Swal.fire({
            icon: 'error',
            title: 'Server Error',
            text: 'Failed to submit the form. Please try again later.'
          });
        });
    })
})

</script>
</body>
</html>
