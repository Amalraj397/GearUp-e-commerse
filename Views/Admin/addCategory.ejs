<%-include("../../Views/Partials/Admin/header")%>

<style>
    .add-category-container {
        padding: 20px;
        color: #ffffff;
        background-color: #1a202c;
    }

    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .page-title {
        font-size: 24px;
        margin: 0;
    }

    .back-button {
        display: flex;
        align-items: center;
        background-color: #4a5568;
        color: #ffffff;
        border: none;
        padding: 8px 16px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
    }

    .back-button .material-icons {
        margin-right: 8px;
    }

    .form-container {
        background-color: #2d3748;
        padding: 20px;
        border-radius: 8px;
    }

    .form-container h2 {
        margin-top: 0;
        margin-bottom: 20px;
    }

    .add-category-form {
        display: flex;
        flex-direction: column;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-group label {
        display: block;
        margin-bottom: 5px;
    }

    .form-group input,
    .form-group textarea {
        width: 100%;
        padding: 10px;
        background-color: #1a202c;
        border: 1px solid #4a5568;
        border-radius: 4px;
        color: #ffffff;
    }

    .form-group textarea {
        height: 100px;
        resize: vertical;
    }

    .submit-button {
        background-color: #000000;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
        align-self: flex-start;
    }

    .submit-button:hover {
        background-color: #0343b1;
    }
</style>

<div class="add-category-container">
    <div class="page-header">
        <h1 class="page-title">ADD CATEGORIES</h1>
        <button class="back-button" onclick="window.history.back();">
            <span class="material-icons">Back</span>
        </button>
    </div>
    
    <div class="form-container">
        <!-- <h2>Add Category</h2> -->
        <form id="add-category"   class="add-category-form">
            <div class="form-group">
                <label for="category-name">Category Name:</label>
                <input type="text" id="category-name" name="name" placeholder="Enter category name">
            </div>
            <div class="form-group">
                <label for="category-description">Description:</label>
                <textarea id="category-description" name="description" placeholder="Enter category description"></textarea>
            </div>
            <button type="submit" class="submit-button">Add Category</button>
        </form>
        <div id="errorMessages" style="color: red;"></div> <!--error message container-->
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- <script>
    document.getElementById('backButton').addEventListener('click', function (){
        window.location.href="/admin/addCategory";
    })

    document.getElementById('add-category').addEventListener('submit', function (e){
        e.preventDefault()
        const categoryName = document.getElementById('category-name').value;
        const categoryDescription = document.getElementById('category-description').value;

        const errorMessage =[];

        // Validations

        if( categoryName==""){
            errorMessage.push('Enter category name');
        }
        // const nameRegex = /^[A-Z][a-zA-Z]*$/;
        // if( ! nameRegex.test(categoryName) || categoryName.length <= 3) {
        //     errorMessage.push('The category name must start with a Capital letter and be at least 3 characters long. ');

        // }

        const nameRegex = /^[A-Z][a-zA-Z]*$/;
      if (!nameRegex.test(categoryName) || categoryName.length < 3) {
        errorMessage.push(
          "The categoryName must start with a Capital letter and be at least 3 characters long. "
        );
      }

        // validation category description
        if( categoryDescription==""){
            errorMessage.push('Enter category description..!')
        }
        if( categoryDescription.trim().length < 5) {
            errorMessage.push ('The description must be at least 5 characters long and cannot start with a space.');
        }
        // Display error message if any
        const errorMessageContainer = document.getElementById('errorMessages');
        errorMessageContainer.innerText= ''; // clear prevoius message

        if (errorMessage.length > 0){
            errorMessage.forEach(message => {
                const p = document.createElement('p');
                p.textContent = message;
                errorMessageContainer.appendChild(p);
            });
            return; // Stop the submission process
        }
        // fetch("/admin/addCategory", {
        //     method: 'POST',
        //     headers: {
        //         'Content-TYpe' : 'application/json'
        //     },
        //     body: JSON.stringify({ name: categoryName, description: categoryDescription })
        // }).then(response =>{
        //     if(! response.ok) throw new Error(' Network response was not ok');
        //     return response.json();
        // }).then(data =>{
        //     Swal.fire ({
        //         title: data.message,
        //         icon: 'success'
        //     }).then(()=>{
        //         location.reload(); // Reload page or update UI as needed..!
        //     });
        // }).catch(error =>{
        //     Swal.fire({
        //         title :'Error !',
        //         text: error.message,
        //         icon: 'error'
        //     });
        // });

        //..................new 01:1 pm 30/04/25
        fetch("/admin/addCategory", {
        method: "POST",
        body: formData,
      })
        .then((response) => response.json())
        .then((data) => {
          Swal.fire({
            title: data.message || "Success!",
            icon: "success",
          }).then(() => {
            location.reload();
          });
        })
        .catch(() => {
            // console.error('Fetch error:', error); // Debugging
          Swal.fire({
            title: "Error!",
            text: "Something went wrong. Please try again.",
            icon: "error",
          });
        });

    });

</script> -->


<!-- ................... second. new 01:14pm  30/04  -->
<script>
    document.getElementById('backButton').addEventListener('click', function () {
      window.location.href = "/admin/addCategory ";
    });
  
    document.getElementById('add-category').addEventListener('submit', function (e) {
      e.preventDefault();
  
      const categoryName = document.getElementById('category-name').value;
      const categoryDescription = document.getElementById('category-description').value;
      const errorMessage = [];
  
      const nameRegex = /^[A-Z][a-zA-Z]*$/;
      if (!categoryName || !nameRegex.test(categoryName) || categoryName.length < 3) {
        errorMessage.push("The category name must start with a capital letter and be at least 3 characters long.");
      }
  
      if (!categoryDescription || categoryDescription.trim().length < 5) {
        errorMessage.push("The description must be at least 5 characters long and cannot start with a space.");
      }
  
      const errorMessageContainer = document.getElementById('errorMessages');
      errorMessageContainer.innerText = '';
      if (errorMessage.length > 0) {
        errorMessage.forEach(msg => {
          const p = document.createElement('p');
          p.textContent = msg;
          errorMessageContainer.appendChild(p);
        });
        return;
      }
  
      // âœ… Fetch using JSON
      fetch("/admin/addCategory ", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          name: categoryName.trim(),
          description: categoryDescription.trim()
        })
      })
        .then(response => response.json())
        .then(data => {
          Swal.fire({
            title: data.message || "Success!",
            icon: "success",
          }).then(() => {
            location.reload();
          });
        })
        .catch(() => {
          Swal.fire({
            title: "Error!",
            text: "Something went wrong. Please try again.",
            icon: "error",
          });
        });
    });
  </script>
  
<%-include("../../Views/Partials/Admin/footer")%>